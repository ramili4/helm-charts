apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"kiali","app.kubernetes.io/instance":"kiali","app.kubernetes.io/name":"kiali","app.kubernetes.io/part-of":"kiali","app.kubernetes.io/version":"v2.3.0","argocd.argoproj.io/instance":"kiali","helm.sh/chart":"kiali-server-2.3.0","version":"v2.3.0"},"name":"kiali","namespace":"istio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"kiali","app.kubernetes.io/name":"kiali"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"checksum/config":"a17132e311e7b83ed8dd05368c58c65bfd0654de434505659656686084e33c0f","kiali.io/dashboards":"go,kiali","prometheus.io/port":"9090","prometheus.io/scrape":"true"},"labels":{"app":"kiali","app.kubernetes.io/instance":"kiali","app.kubernetes.io/name":"kiali","app.kubernetes.io/part-of":"kiali","app.kubernetes.io/version":"v2.3.0","helm.sh/chart":"kiali-server-2.3.0","version":"v2.3.0"},"name":"kiali"},"spec":{"containers":[{"command":["/opt/kiali/kiali","-config","/kiali-configuration/config.yaml"],"env":[{"name":"ACTIVE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"LOG_LEVEL","value":"info"},{"name":"LOG_FORMAT","value":"text"},{"name":"LOG_TIME_FIELD_FORMAT","value":"2006-01-02T15:04:05Z07:00"},{"name":"LOG_SAMPLER_RATE","value":"1"}],"image":"quay.io/kiali/kiali:v2.3.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/kiali/healthz","port":"api-port","scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":30},"name":"kiali","ports":[{"containerPort":20001,"name":"api-port"},{"containerPort":9090,"name":"http-metrics"}],"readinessProbe":{"httpGet":{"path":"/kiali/healthz","port":"api-port","scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":30},"resources":{"limits":{"memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true},"startupProbe":{"failureThreshold":6,"httpGet":{"path":"/kiali/healthz","port":"api-port","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":10},"terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/kiali-configuration","name":"kiali-configuration"},{"mountPath":"/kiali-cert","name":"kiali-cert"},{"mountPath":"/kiali-secret","name":"kiali-secret"},{"mountPath":"/kiali-cabundle","name":"kiali-cabundle"}]}],"serviceAccountName":"kiali","volumes":[{"configMap":{"name":"kiali"},"name":"kiali-configuration"},{"name":"kiali-cert","secret":{"optional":true,"secretName":"istio.kiali-service-account"}},{"name":"kiali-secret","secret":{"optional":true,"secretName":"kiali"}},{"configMap":{"name":"kiali-cabundle","optional":true},"name":"kiali-cabundle"}]}}}}
  creationTimestamp: "2025-01-14T08:13:07Z"
  generation: 3
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v2.3.0
    argocd.argoproj.io/instance: kiali
    helm.sh/chart: kiali-server-2.3.0
    version: v2.3.0
  name: kiali
  namespace: istio-system
  resourceVersion: "559504"
  uid: 3e5ae0a2-7742-4f33-afb6-1b167c8d6356
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kiali
      app.kubernetes.io/name: kiali
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: a17132e311e7b83ed8dd05368c58c65bfd0654de434505659656686084e33c0f
        kiali.io/dashboards: go,kiali
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: kiali
        app.kubernetes.io/instance: kiali
        app.kubernetes.io/name: kiali
        app.kubernetes.io/part-of: kiali
        app.kubernetes.io/version: v2.3.0
        helm.sh/chart: kiali-server-2.3.0
        version: v2.3.0
      name: kiali
    spec:
      containers:
      - command:
        - /opt/kiali/kiali
        - -config
        - /kiali-configuration/config.yaml
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: info
        - name: LOG_FORMAT
          value: text
        - name: LOG_TIME_FIELD_FORMAT
          value: 2006-01-02T15:04:05Z07:00
        - name: LOG_SAMPLER_RATE
          value: "1"
        image: quay.io/kiali/kiali:v2.3.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /kiali/healthz
            port: api-port
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: kiali
        ports:
        - containerPort: 20001
          name: api-port
          protocol: TCP
        - containerPort: 9090
          name: http-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /kiali/healthz
            port: api-port
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        startupProbe:
          failureThreshold: 6
          httpGet:
            path: /kiali/healthz
            port: api-port
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /kiali-configuration
          name: kiali-configuration
        - mountPath: /kiali-cert
          name: kiali-cert
        - mountPath: /kiali-secret
          name: kiali-secret
        - mountPath: /kiali-cabundle
          name: kiali-cabundle
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kiali
      serviceAccountName: kiali
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: kiali
        name: kiali-configuration
      - name: kiali-cert
        secret:
          defaultMode: 420
          optional: true
          secretName: istio.kiali-service-account
      - name: kiali-secret
        secret:
          defaultMode: 420
          optional: true
          secretName: kiali
      - configMap:
          defaultMode: 420
          name: kiali-cabundle
          optional: true
        name: kiali-cabundle
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-01-14T08:13:07Z"
    lastUpdateTime: "2025-01-14T08:13:07Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-01-14T08:13:07Z"
    lastUpdateTime: "2025-01-14T09:31:40Z"
    message: ReplicaSet "kiali-6bc977c54c" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
